/*
 * @version       1.0.0
 * @package       RSVario! 1.0.0
 * @copyright (C) 2016 www.rsjoomla.com
 * @license       GNU General Public License http://www.gnu.org/licenses/gpl-3.0.en.html
 *
 */

!function(jQuery) {
	jQuery(document).ready(function() {
		// Turn radios into btn-group
		RSTemplate.transformBtnGroup();

		// Fix for Bootstrap collapse (accordion)
		RSTemplate.fixAccordions();

		// Fix for Bootstrap carousel slide
		RSTemplate.fixCarousels();

		// IE specific fixes
		RSTemplate.fixIE();

		// Search from
		RSTemplate.initSearchForm();

		// Fade-in alerts
		RSTemplate.fadeInAlerts();

		// Initiate OnePage website
		if (RSTemplate.onePageCheck()) {
			RSTemplate.initOnePage();
		}

		// Tooltip
		RSTemplate.initTooltip();

		// Go to top button
		RSTemplate.initGoToTop();

		// Navbar button
		RSTemplate.initNavbarButton();

		// Border effect
		RSTemplate.initAnimateBorder();
		
		// Init masonry
		try {
			RSTemplate.initMasonry();
		} catch (error) {

		}

		if (typeof jQuery.fn.rsjoomlamap != 'undefined' || typeof jQuery.rsRadiusSearch != 'undefined') {
			RSTemplate.customizeMap();
		}

	});

	jQuery(window).ready(function() {
		// Fade content
		if (RSTemplate.hasContentFader()) {
			RSTemplate.fadeContent();
		}
	});
}(window.jQuery);

var RSTemplate;
RSTemplate = {
	onePageCheck       : function() {
		var $menu = jQuery('.rstpl-main-menu-position');
		if (typeof $menu != 'undefined') {
			var $links = $menu.find('.rstpl-template-menu > li:not(.active) > a'),
				$continue = true;

			$links.each(function() {
				if (!jQuery(this).hasClass('open-search')) {
					var $href = jQuery(this).attr('href');
					if ($href.charAt(0) !== '#') {
						$continue = false;
					}
				}
			});

			if ($menu.attr('data-onepage') == 'true' && $continue) {
				return true;
			}
		}
		return false;
	},
	initOnePage        : function() {
		var $menu = jQuery('.rstpl-main-menu-position');
		if (typeof $menu != 'undefined') {
			$menu.find('.rstpl-template-menu > .active > a').attr('href', '#rstpl-main-menu-position');

			$menu.find('.rstpl-template-menu').onePageNav({
				currentClass   : 'active',
				changeHash     : true,
				scrollSpeed    : 750,
				scrollThreshold: 0.5,
				filter         : '',
				easing         : 'swing'
			});
		}
	},
	initMasonry        : function() {
		jQuery('.newsflash-masonry, .latest-articles').masonry({
			itemSelector: '.masonry-tile'
		});
	},
	fadeContent        : function() {
		try {
			window.sr = new scrollReveal({
				vFactor: 0.60,
				move   : '30px',
				scale  : {direction: 'up', power: '0%'},
				over   : '1s',
				ease   : 'hustle',
			});
		} catch (error) {
		}
	},
	hasContentFader    : function() {
		return (typeof scrollReveal != 'undefined');
	},
	showPreloader      : function(animation_class) {
		var page_wrap = jQuery('#rstpl-pagewrap'),
			loader = jQuery('.pageload-overlay');

		// Add the animation after the timeout
		jQuery(window).load(function() {
			var animationEnd = "transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd animationend webkitAnimationEnd oAnimationEnd MSAnimationEnd";
			loader.addClass(animation_class);
			// Detect when the animation is finished and remove the loader
			loader.on(animationEnd, function() {
				loader.remove();
			});

		});
	},
	transformBtnGroup  : function() {
		jQuery('.radio.btn-group label').addClass('btn');
		jQuery('.btn-group label:not(.active)').click(function() {
			var label = jQuery(this);
			var input = jQuery('#' + label.attr('for'));

			if (!input.prop('checked')) {
				label.closest('.btn-group').find('label').removeClass('active btn-success btn-danger btn-primary');
				if (input.val() == '') {
					label.addClass('active btn-primary');
				} else if (input.val() == 0) {
					label.addClass('active btn-danger');
				} else {
					label.addClass('active btn-success');
				}
				input.prop('checked', true).trigger('change');
			}
		});
		jQuery('.btn-group input[checked=checked]').each(function() {
			if (jQuery(this).val() == '') {
				jQuery('label[for=' + jQuery(this).attr('id') + ']').addClass('active btn-primary');
			} else if (jQuery(this).val() == 0) {
				jQuery('label[for=' + jQuery(this).attr('id') + ']').addClass('active btn-danger');
			} else {
				jQuery('label[for=' + jQuery(this).attr('id') + ']').addClass('active btn-success');
			}
		});
	},
	fadeInAlerts       : function() {
		window.setTimeout(function() {
			jQuery('.alert').addClass('in');
		}, 400);
	},
	fixAccordions      : function() {
		jQuery('.accordion').each(function() {
			jQuery(this).find('.accordion-toggle').each(function(i, title) {
				if (jQuery(title).parent().siblings('.accordion-body').hasClass('in') === false)
					jQuery(title).addClass('collapsed');
			});
		});
		jQuery('.accordion-toggle').click(function() {
			jQuery(this).parents('.accordion').each(function() {
				jQuery(this).find('.accordion-toggle').each(function(i, title) {
					jQuery(title).addClass('collapsed');
				});
			});
		});
	},
	fixCarousels       : function() {
		// add reset if function does not exist in Carousel
		if (jQuery.fn.carousel.Constructor.prototype.reset == undefined) {
			jQuery.fn.carousel.Constructor.prototype.reset = function() {
				this.sliding = false;
			}
		}
	},
	initTooltip        : function() {
		jQuery('*[rel=tooltip]').tooltip();
		jQuery('*[data-toggle=tooltip]').tooltip();
		jQuery('*[class=hasTooltip]').tooltip();
	},
	initGoToTop        : function() {
		var back_to_top = jQuery('.rstpl-go-top');

		jQuery(window).scroll(function() {
			if ((jQuery(document).height() - jQuery(this).height()) > jQuery(this).scrollTop()) {
				back_to_top.removeClass('rstpl-go-top-is-visible rstpl-go-top-fade-out');
			} else {
				back_to_top.addClass('rstpl-go-top-is-visible');
			}
		});

		back_to_top.find('a').on('click', function(event) {
			event.preventDefault();
			jQuery('body,html').animate({
					scrollTop: 0,
				}, 700
			);
		});
	},
	initAnimateBorder: function() {
		var userAgent			= navigator.userAgent;
		jQuery.browser			= {};
		jQuery.browser.msie8	= /MSIE 8.0/.test(userAgent);
		jQuery.browser.msie9	= /MSIE 9.0/.test(userAgent);
		
		if (!jQuery.browser.msie8 && !jQuery.browser.msie9) {
			if (jQuery('body').hasClass('site')) {
				jQuery.each(jQuery('.rstpl-navigation .rstpl-template-menu > li > a'), function() {
					jQuery(this).animateBorder();
				});
			}
		}
	},
	fixIE              : function() {
		// Placeholder fix for IE9
		if (jQuery.browser.msie && (jQuery.browser.version == '9.0')) {
			jQuery('input, textarea').placeholder();
		}

		// Last-child fix for IE8
		if (jQuery.browser.msie && parseInt(jQuery.browser.version, 10) <= 8) {
			jQuery('.dropdown-submenu > .dropdown-menu li:last-child').addClass('last-child');
			jQuery('.rstpl-box-pricing .table tr:last-child').addClass('last-child');
		}
	},
	initSearchForm     : function() {
		var search_input = jQuery('.rstpl-search .search-bar');
		var btn_width = jQuery('.rstpl-search .open-search');

		btn_width.click(function(e) {
			e.preventDefault();
			jQuery(this).toggleClass('active').find('i').toggleClass('icon-times');
			search_input.toggleClass('open');
		});

	},
	customizeMap: function() {
		function hexc(colorval) {
			var parts = colorval.match(/^rgb\((\d+),\s*(\d+),\s*(\d+)\)$/);
			delete(parts[0]);
			for (var i = 1; i <= 3; ++i) {
				parts[i] = parseInt(parts[i]).toString(16);
				if (parts[i].length == 1) parts[i] = '0' + parts[i];
			}
			color = '#' + parts.join('');

			return color;
		}

		function pinSymbol(color) {
			return {
				path        : 'M 0,0 C -2,-20 -10,-22 -10,-30 A 10,10 0 1,1 10,-30 C 10,-22 2,-20 0,0 z M -2,-30 a 2,2 0 1,1 4,0 2,2 0 1,1 -4,0',
				fillColor   : color,
				fillOpacity : 1,
				strokeColor : '#000',
				strokeWeight: 2,
				scale       : 1,
			};
		}

		if (jQuery('#rsepro_ajax').length) {
			jQuery('#rsepro_ajax').attr('placeholder', 'Search events');
		} else if (jQuery('.rsepro_search_form').length) {
			jQuery('.rstpl-rseventspro_search').addClass('standard-search');
		}


		//define the basic color of your map, plus a value for saturation and brightness
		var $color = jQuery('.rstpl-main-menu-position').css('background-color');
		if ($color != 'transparent' || $color != '') {
			$color = 'rgb(145, 156, 93)';
		}

		var main_color = hexc($color),
			saturation_value = -50,
			brightness_value = 5;

		//we define here the style of the map
		var style = [
			{
				//set saturation for the labels on the map
				elementType: "labels",
				stylers    : [
					{saturation: saturation_value}
				]
			},
			{
				//poi stands for point of interest - don't show these lables on the map
				featureType: "poi",
				elementType: "labels",
				stylers    : [
					{visibility: "off"}
				]
			},
			{
				//don't show highways lables on the map
				featureType: 'road.highway',
				elementType: 'labels',
				stylers    : [
					{visibility: "off"}
				]
			},
			{
				//don't show local road lables on the map
				featureType: "road.local",
				elementType: "labels.icon",
				stylers    : [
					{visibility: "off"}
				]
			},
			{
				//don't show arterial road lables on the map
				featureType: "road.arterial",
				elementType: "labels.icon",
				stylers    : [
					{visibility: "off"}
				]
			},
			{
				//don't show road lables on the map
				featureType: "road",
				elementType: "geometry.stroke",
				stylers    : [
					{visibility: "off"}
				]
			},
			{
				//style different elements on the map
				featureType: "transit",
				elementType: "geometry.fill",
				stylers    : [
					{hue: main_color},
					{visibility: "on"},
					{lightness: brightness_value},
					{saturation: saturation_value}
				]
			},
			{
				featureType: "poi",
				elementType: "geometry.fill",
				stylers    : [
					{hue: main_color},
					{visibility: "on"},
					{lightness: brightness_value},
					{saturation: saturation_value}
				]
			},
			{
				featureType: "poi.government",
				elementType: "geometry.fill",
				stylers    : [
					{hue: main_color},
					{visibility: "on"},
					{lightness: brightness_value},
					{saturation: saturation_value}
				]
			},
			{
				featureType: "poi.sport_complex",
				elementType: "geometry.fill",
				stylers    : [
					{hue: main_color},
					{visibility: "on"},
					{lightness: brightness_value},
					{saturation: saturation_value}
				]
			},
			{
				featureType: "poi.attraction",
				elementType: "geometry.fill",
				stylers    : [
					{hue: main_color},
					{visibility: "on"},
					{lightness: brightness_value},
					{saturation: saturation_value}
				]
			},
			{
				featureType: "poi.business",
				elementType: "geometry.fill",
				stylers    : [
					{hue: main_color},
					{visibility: "on"},
					{lightness: brightness_value},
					{saturation: saturation_value}
				]
			},
			{
				featureType: "transit",
				elementType: "geometry.fill",
				stylers    : [
					{hue: main_color},
					{visibility: "on"},
					{lightness: brightness_value},
					{saturation: saturation_value}
				]
			},
			{
				featureType: "transit.station",
				elementType: "geometry.fill",
				stylers    : [
					{hue: main_color},
					{visibility: "on"},
					{lightness: brightness_value},
					{saturation: saturation_value}
				]
			},
			{
				featureType: "landscape",
				stylers    : [
					{hue: main_color},
					{visibility: "on"},
					{lightness: brightness_value},
					{saturation: saturation_value}
				]

			},
			{
				featureType: "road",
				elementType: "geometry.fill",
				stylers    : [
					{hue: main_color},
					{visibility: "on"},
					{lightness: brightness_value},
					{saturation: saturation_value}
				]
			},
			{
				featureType: "road.highway",
				elementType: "geometry.fill",
				stylers    : [
					{hue: main_color},
					{visibility: "on"},
					{lightness: brightness_value},
					{saturation: saturation_value}
				]
			},
			{
				featureType: "water",
				elementType: "geometry",
				stylers    : [
					{hue: main_color},
					{visibility: "on"},
					{lightness: brightness_value},
					{saturation: saturation_value}
				]
			}
		];

		if (typeof jQuery.fn.rsjoomlamap != 'undefined') {
			jQuery.fn.rsjoomlamap.defaultOptions.styles = style;
			jQuery.fn.rsjoomlamap.defaultOptions.markerIcon = pinSymbol("#81AF81");
		} else if (typeof jQuery.rsRadiusSearch != 'undefined') {
			jQuery.rsRadiusSearch.defaultOptions.styles = style;
		}
	},

	initNavbarButton: function() {
		// Add the icon
		$container = jQuery('.rstpl-main-menu-position');

		var $menuItems = $container.find('.rstpl-template-menu > li');
		$menuItems.each(function() {
			var icon = jQuery(this).attr('data-icon');
			if (typeof icon != 'undefined') {
				jQuery(this).children('a').prepend('<span class="menu-icon ' + icon + '"></span> ')
			}
		});

		// we initiate a submenu button as well here
		jQuery('.parent').append('<span class="submenu-button"></span>');

		var megaMenu = jQuery('.rstpl-mega-menu');
		megaMenu.each(function() {
			var megaMenuChildren = jQuery(this).children('.rstpl-mega-menu-container').not('.visible-desktop');
			if (megaMenuChildren.length) {
				jQuery(this).append('<span class="submenu-button"></span>');
			}
		});


		// on clicking the submenu-button, open the dropdown menu
		jQuery('.submenu-button').click(function() {
			var parentElement = jQuery(this).parent();
			var dropdown 	  = parentElement.find('.dropdown-menu, .rstpl-mega-menu-container').first();

            jQuery(this).toggleClass('opened');

            if (jQuery(this).hasClass('opened')) {
                parentElement.addClass('active');
                dropdown.css('visibility', 'visible');
                dropdown.css('opacity', '1');
                dropdown.addClass('slide');
            } else {
                parentElement.removeClass('active');
                dropdown.css('visibility', 'hidden');
                dropdown.css('opacity', '0');
                dropdown.removeClass('slide');
            }
		});

		// fix for sub-menu items that are visible outside viewport
		if (typeof jQuery.fn.offscreen != 'undefined') {
			jQuery('.dropdown-menu').offscreen({
				rightClass  : 'right-edge',
				leftClass   : 'left-edge',
				smartResize : true
			});
		}

		// Handle the off canvas menu
		$offCanvas = jQuery('.rstpl-navigation-offcanvas');
		if ($offCanvas.length) {
			window_w = jQuery(window).width();

			jQuery('.rstpl-navigation-toggler').click(function() {
				jQuery(this).parent().toggleClass('opened');
			});
			jQuery('.rstpl-search').click(function() {
				if (jQuery(this).parent().parent().hasClass('opened')) {
					return true;
				} else {
					jQuery(this).parent().parent().addClass('opened');
				}
			});
		}
	}
};

(function($) {
	$(document).ready(function() {

		// jQuery reverse
		$.fn.reverse = [].reverse;

		$(document).on('click', '.fixed-action-btn', function(e) {
			var $this = $(this);
			if ($(this).hasClass('active')) {
				closeFABMenu($this);
			} else {
				openFABMenu($this);
			}
		});

	});

	$.fn.extend({
		openFAB : function() {
			var $this = $(this);
			openFABMenu($this);
		},
		closeFAB: function() {
			var $this = $(this);
			closeFABMenu($this);
		}
	});


	var openFABMenu = function(btn) {
		$this = btn;
		if ($this.hasClass('active') === false) {
			$this.addClass('active');
			$this.find('ul').css('display', 'block');
			$this.find('ul .btn-floating').velocity(
				{scaleY: ".4", scaleX: ".4", translateY: "40px"},
				{duration: 0});

			var time = 0;
			$this.find('ul .btn-floating').reverse().each(function() {
				$(this).velocity(
					{opacity: "1", scaleX: "1", scaleY: "1", translateY: "0"},
					{duration: 80, delay: time});
				time += 40;
			});
		}
	};

	var closeFABMenu = function(btn) {
		$this = btn;
		$this.removeClass('active');
		var time = 0;
		$this.find('ul .btn-floating').velocity("stop", true);
		$this.find('ul .btn-floating').velocity(
			{opacity: "0", scaleX: ".4", scaleY: ".4", translateY: "40px"},
			{duration: 80});
		setTimeout(function() {
			$this.find('ul').css('display', 'none');
		}, 600);
	};

}(jQuery));
